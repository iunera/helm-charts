{{- if semverCompare ">= 1.9-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: apps/v1
{{- else if semverCompare ">= 1.8-0, <= 1.9-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: apps/v1beta2
{{- else -}}
apiVersion: apps/v1beta1
{{- end }}
kind: Deployment
metadata:
  name: {{ template "dex.fullname" . }}
  labels:
    app: {{ template "dex.name" . }}
    env: {{ default "dev" .Values.global.deployEnv }}
    chart: {{ template "dex.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ''
spec:
  replicas: {{ .Values.replicaCount }}
  minReadySeconds: 30
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ template "dex.name" . }}
      env: {{ default "dev" .Values.global.deployEnv }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "dex.name" . }}
        env: {{ default "dev" .Values.global.deployEnv }}
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      volumes:
      - name: config
        configMap:
          name: {{ template "dex.fullname" . }}
          items:
          - key: config.yaml
            path: config.yaml
{{- if .Values.tls.create }}
      - name: tls
        secret:
          secretName: {{ template "dex.fullname" $ }}-tls
{{- end }}
      serviceAccountName: {{ template "dex.serviceAccountName" . }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/usr/local/bin/dex", "serve", "/etc/dex/config.yaml"]
        env:
        - name: KUBERNETES_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace

        {{- if .Values.existingEnvSecret.enabled }}
        {{- range $variable, $key := .Values.existingEnvSecret.varKeys }}
        - name: {{ $variable }}
          valueFrom:
            secretKeyRef:
              name: {{ template "dex.existingEnvSecretName" $ }}
              key: {{ $key }}
        {{- end }}

        {{- else }}
        {{- range $key, $value := .Values.envSecrets }}
        - name: {{ $key }}
          valueFrom:
            secretKeyRef:
              name: {{ template "dex.fullname" $ }}
              key: {{  $key }}
        {{- end }}

        {{- end }}
        ports:
        - name: http
          containerPort: 5556
          protocol: TCP
        livenessProbe:
          httpGet:
            path: {{ template "dex.healthCheckPath" . }}
            port: 5556
          {{- if .Values.tls.create }}
            scheme: HTTPS
          {{- end }}
        readinessProbe:
          httpGet:
            path: {{ template "dex.healthCheckPath" . }}
            port: 5556
          {{- if .Values.tls.create }}
            scheme: HTTPS
          {{- end }}
          initialDelaySeconds: 5
          timeoutSeconds: 1
        volumeMounts:
        - name: config
          mountPath: /etc/dex
{{- if .Values.tls.create }}
        - name: tls
          mountPath: /etc/dex/tls
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 6 }}
    {{- end }}
